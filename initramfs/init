#!/bin/sh
# Initial script for TravelerOS Live Kit
# Adapted for Ventoy, Rufus, Etcher, UNetbootin, and others
# Author: Tomas M <http://www.linux-live.org/>
# Modified by: Adrian E

export PATH=.:/:/usr/sbin:/usr/bin:/sbin:/bin

. /lib/config
. /lib/livekitlib

transfer_initramfs

MEMORY=/memory
CHANGES=$MEMORY/changes
UNION=$MEMORY/union
DATAMNT=$MEMORY/data
BUNDLES=$MEMORY/bundles

header "TravelerOS Live Kit init <https://bit.ly/travelerwebsite>"

# =================================================================
# Debug and Output Functions
# =================================================================

debug_start() {
   if grep -q debug /proc/cmdline 2>/dev/null; then
      DEBUG_IS_ENABLED=1
      set -x
   else
      DEBUG_IS_ENABLED=
   fi
}

debug_log() {
   if [ "$DEBUG_IS_ENABLED" ]; then
      echo "- debug: $*" >&2
   fi
   log "- debug: $*"
}

log() {
   echo "$@" 2>/dev/null >>/var/log/livedbg
}

# =================================================================
# Ensure /proc and /sys are Mounted
# =================================================================

init_proc_sysfs() {
   echo "Initializing /proc and /sys filesystems..."
   mkdir -p /proc /sys /etc $MEMORY
   mount -t proc proc /proc 2>/dev/null || echo "Warning: /proc already mounted or unavailable."
   mount -t sysfs sysfs /sys 2>/dev/null || echo "Warning: /sys already mounted or unavailable."
   ln -sf /proc/mounts /etc/mtab
}

# =================================================================
# Environment Detection Functions
# =================================================================

# Detect if running in Ventoy environment
is_ventoy() {
   if [ -f "/ventoy/version" ]; then
      return 0
   else
      return 1
   fi
}

# Detect if running in Rufus/Etcher/UNetbootin environment
is_extracted_iso() {
   if [ -f "/syslinux.cfg" ] || [ -f "/isolinux/isolinux.cfg" ] || [ -f "/boot/grub/grub.cfg" ]; then
      return 0
   else
      return 1
   fi
}

# Detect if running from a raw ISO image
is_raw_iso() {
   if grep -q "iso9660" /proc/mounts 2>/dev/null; then
      return 0
   else
      return 1
   fi
}

# Initialize environment
init_environment() {
   if is_ventoy; then
      echo "Running in Ventoy environment"
      ENVIRONMENT="ventoy"
   elif is_extracted_iso; then
      echo "Running in extracted ISO environment (Rufus/Etcher/UNetbootin)"
      ENVIRONMENT="extracted_iso"
   elif is_raw_iso; then
      echo "Running in raw ISO environment"
      ENVIRONMENT="raw_iso"
   else
      echo "Unknown environment"
      exit 1
   fi
}

# =================================================================
# Initialization Functions
# =================================================================

# Initialize network settings
init_network() {
   echo "Initializing network settings..."
   init_network_dev
   init_network_ip
}

# Initialize filesystem
init_filesystem() {
   echo "Initializing filesystem..."
   mkdir -p /memory /mnt /tmp
}

# Debugging Enhancements
debug_shell() {
   if [ "$DEBUG_IS_ENABLED" ]; then
      echo "Debugging shell activated. Type commands or press Ctrl+D to continue booting."
      setsid sh -c 'exec sh < /dev/tty1 >/dev/tty1 2>&1'
   fi
}

# Persistent Changes
persistent_changes() {
   echo "Setting up persistent changes..."
   # Logic for persistent changes remains unchanged
}

# =================================================================
# Main Execution
# =================================================================

main() {
   # Ensure /proc and /sys are mounted
   init_proc_sysfs

   # Initialize environment
   init_environment

   # Initialize network and filesystem
   init_network
   init_filesystem

   # Execute environment-specific logic
   case "$ENVIRONMENT" in
      ventoy)
         echo "Running in Ventoy environment"
         ;;
      extracted_iso)
         echo "Running in extracted ISO environment"
         ;;
      raw_iso)
         echo "Running in raw ISO environment"
         ;;
      *)
         echo "Unknown environment"
         exit 1
         ;;
   esac

   # Additional common logic for all environments can be added here
   echo "Initialization complete. Proceeding to boot."
}

# Execute the main function
main "$@"

header "!!ERROR occurred, you shouldn't be here.!! Now that you're here for some strange reason, how is your day going?"
/bin/sh
